/*
 * Copyright (C) Subinitial LLC
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
/dts-v1/;

#include "am33xx.dtsi"
#include "am335x-bone-common.dtsi"
#include "am335x-bonegreen-common.dtsi"
// #include "am335x-pruss-rproc.dtsi"
/* #include "am335x-bone-jtag.dtsi" */

#include "am335x-bonecore-common.dtsi"


&am33xx_pinmux {
  bb_uart1_pins: pinmux_bb_uart1_pins {
    pinctrl-single,pins = <
      BONE_P9_24 (PIN_OUTPUT | MUX_MODE0)	// uart1_txd.uart1_txd
      BONE_P9_26 (PIN_INPUT | MUX_MODE0)	// uart1_rxd.uart1_rxd
    	BONE_P9_19 (PIN_OUTPUT_PULLDOWN | MUX_MODE7)	// uart1_rtsn.uart1_rtsn
    	BONE_P9_20 (PIN_INPUT | MUX_MODE7)	// uart1_ctsn.uart1_ctsn
    >;
  };

  bb_uart2_pins: pinmux_bb_uart2_pins {
    pinctrl-single,pins = <
      // BONE_P9_21 (PIN_OUTPUT | MUX_MODE1)	/* P9_21: spi0_d0.uart2_txd */
      // BONE_P9_22 (PIN_INPUT  | MUX_MODE1)	/* P9_22: spi0_sclk.uart2_rxd */
    //	BONE_P8_38 (PIN_OUTPUT | MUX_MODE6)	// lcd_data9.uart2_rtsn
    //	BONE_P8_37 (PIN_INPUT  | MUX_MODE6)	// lcd_data8.uart2_ctsn
    >;
  };

  bb_uart4_pins: pinmux_bb_uart4_pins {
    pinctrl-single,pins = <
      BONE_P9_13 (PIN_OUTPUT | MUX_MODE6)	// gpmc_wpn.uart4_txd_mux2
      BONE_P9_11 (PIN_INPUT  | MUX_MODE6)	// gpmc_wait0.uart4_rxd_mux2
    >;
  };

  bb_spi0_pins: pinmux_bb_spi0_pins {
    pinctrl-single,pins = <
      BONE_P9_21 (PIN_INPUT_PULLUP  | MUX_MODE0)  // spi0_d0 MISO
      BONE_P9_18 (PIN_OUTPUT_PULLDOWN  | MUX_MODE0)  // spi0_d1 MOSI
      BONE_P9_17 (PIN_OUTPUT_PULLUP | MUX_MODE0)  // spi0_cs0
      BONE_P9_22 (PIN_OUTPUT_PULLUP  | MUX_MODE0)  // spi0_sclk
    >;
  };

  bb_spi1_pins: pinmux_bb_spi1_pins {
    pinctrl-single,pins = <
      BONE_P9_27 (PIN_INPUT_PULLDOWN | MUX_MODE7)  // adc_drdy
      BONE_P9_28 (PIN_OUTPUT_PULLUP | MUX_MODE3)  // spi1_cs0
      BONE_P9_29 (PIN_INPUT_PULLUP  | MUX_MODE3)  // spi1_d0 MISO
      BONE_P9_30 (PIN_OUTPUT_PULLDOWN  | MUX_MODE3)  // spi1_d1 MOSI
      BONE_P9_31 (PIN_OUTPUT_PULLUP  | MUX_MODE3)  // spi1_sclk
    >;
  };
};

&capeuniversal {
  P9_19 {
    gpio-name = "cmd01";
    gpio = <&gpio0 13 0>;
    input; dir-changeable;
  };
  P9_20 {
    gpio-name = "microCTS";
    gpio = <&gpio0 12 0>;
    output; init-low; dir-changeable;
  };
  
  P9_27 {
    gpio-name = "adc_drdy";
    gpio = <&gpio3 19 0>;
    input; dir-changeable;
  };
};

&uart1 {
  status = "okay";
  pinctrl-names = "default";
  pinctrl-0 = <&bb_uart1_pins>;
};

&uart2 {
  status = "okay";
  pinctrl-names = "default";
  pinctrl-0 = <&bb_uart2_pins>;
};

&uart4 {
  status = "okay";
  pinctrl-names = "default";
  pinctrl-0 = <&bb_uart4_pins>;
};

&pruss {
  status = "okay";
};

// &spi0 {
//   status = "okay";
//   pinctrl-names = "default";
//   pinctrl-0 = <&bb_spi1_pins>;

//   spidev@1 {
//     compatible = "linux,spidev";
//     spi-max-frequency = <24000000>;
//     reg = <0>;
//     spi-cpha;
//   };
// };

&spi0 {
  status = "okay";
  pinctrl-names = "default";
  pinctrl-0 = <&bb_spi0_pins>;

  spidev@0 {
    compatible = "linux,spidev";
    spi-max-frequency = <3800000>;
    reg = <0>;
    // spi-cpha;
  };
};

&spi1 {
  status = "okay";
  pinctrl-names = "default";
  pinctrl-0 = <&bb_spi1_pins>;

  spidev@0 {
    compatible = "linux,spidev";
    spi-max-frequency = <3800000>;
    reg = <0>;
    // spi-cpha;
  };
};

/ {
	model = "TI AM335x Bonecore WiFi Test-Bed";
	compatible = "ti,am335x-bone-green", "ti,am335x-bone-black", "ti,am335x-bone", "ti,am33xx";
};
