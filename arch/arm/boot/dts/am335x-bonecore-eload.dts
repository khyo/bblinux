/*
 * Copyright (C) Subinitial LLC
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
/dts-v1/;

#include "am33xx.dtsi"
#include "am335x-bone-common.dtsi"
#include "am335x-bonegreen-common.dtsi"
// #include "am335x-pruss-rproc.dtsi"
/* #include "am335x-bone-jtag.dtsi" */

#include "am335x-bonecore-common.dtsi"


&am33xx_pinmux {
  bb_gpio_pins: pinmux_bb_gpio_pins {
    pinctrl-single,pins = <
      BONE_P8_10 (PIN_OUTPUT_PULLUP | MUX_MODE7)
      BONE_P8_11 (PIN_OUTPUT_PULLUP | MUX_MODE7)
      BONE_P8_12 (PIN_OUTPUT_PULLDOWN | MUX_MODE7)

      BONE_P8_14 (PIN_INPUT_PULLDOWN | MUX_MODE7)  // CONTINUITY_DETECTED
      BONE_P8_15 (PIN_INPUT_PULLUP | MUX_MODE7)
      BONE_P8_16 (PIN_OUTPUT_PULLDOWN | MUX_MODE7)
      BONE_P8_17 (PIN_OUTPUT_PULLDOWN | MUX_MODE7)  // LXI_RED
      BONE_P8_18 (PIN_OUTPUT_PULLDOWN | MUX_MODE7)  // LXI_GREEN
      
      BONE_P8_27 (PIN_OUTPUT_PULLDOWN | MUX_MODE7)  // CMD_PROP_FORE_PWR
      BONE_P8_28 (PIN_OUTPUT_PULLDOWN | MUX_MODE7)
    >;
  };

  bb_spi0_pins: pinmux_bb_spi0_pins {
    pinctrl-single,pins = <
      BONE_P9_17 (PIN_OUTPUT_PULLUP | MUX_MODE0)  // spi0_cs0
      BONE_P9_21 (PIN_INPUT_PULLUP  | MUX_MODE0)  // spi0_d0 MISO
      BONE_P9_18 (PIN_OUTPUT_PULLDOWN  | MUX_MODE0)  // spi0_d1 MOSI
      BONE_P9_22 (PIN_OUTPUT_PULLUP  | MUX_MODE0)  // spi0_sclk
    >;
  };

  bb_spi1_pins: pinmux_bb_spi1_pins {
    pinctrl-single,pins = <
      BONE_P9_28 (PIN_OUTPUT_PULLUP | MUX_MODE3)  // spi1_cs0
      BONE_P9_29 (PIN_INPUT_PULLUP  | MUX_MODE3)  // spi1_d0 MISO
      BONE_P9_30 (PIN_OUTPUT_PULLDOWN  | MUX_MODE3)  // spi1_d1 MOSI
      BONE_P9_31 (PIN_OUTPUT_PULLUP  | MUX_MODE3)  // spi1_sclk
    >;
  };

  i2c1_pins: pinmux_i2c1_pins {
    pinctrl-single,pins = <
      BONE_P9_24 (PIN_INPUT_PULLDOWN | MUX_MODE3)
      BONE_P9_26 (PIN_INPUT_PULLDOWN | MUX_MODE3)
    >;
  };

  bb_pwm1_pins: pinmux_bb_pwm1_pins {
    pinctrl-single,pins = <
      BONE_P9_16 (PIN_OUTPUT | MUX_MODE6)	/* ADC_CLK_IN_ISO */
    >;
  };

  bb_pwm2_pins: pinmux_bb_pwm2_pins {
    pinctrl-single,pins = <
      BONE_P8_13 (PIN_OUTPUT | MUX_MODE4)	/* FAN_PWM */
    >;
  };

  bb_ecap0_pins: pinmux_bb_ecap0_pins {
    pinctrl-single,pins = <
      BONE_P8_07 (PIN_INPUT_PULLDOWN | MUX_MODE2)	/* FAN_TACH (Timer4) */

      BONE_P9_42A (PIN_INPUT_PULLDOWN | MUX_MODE0)	/* FAN_TACH' */
      BONE_P9_42B (PIN_INPUT | MUX_MODE7)	/* spare-tied */

      /* GPIOS */

    >;
  };
};

&capeuniversal {
  P8_10 { gpio = <&gpio2  4 0>; output; init-low; dir-changeable; };
  P8_11 { gpio = <&gpio1 13 0>; output; init-high; dir-changeable; };
  P8_12 { gpio = <&gpio1 12 0>; output; init-low; dir-changeable; };

  P8_14 { gpio = <&gpio0 26 0>; input; dir-changeable; };  // EEPROM_WR
  P8_15 { gpio = <&gpio1 15 0>; input; dir-changeable; };  // ~INT_IO_ISO
  P8_16 { gpio = <&gpio1 14 0>; output; init-low; dir-changeable; };  // EN_ISO_PWR
  P8_17 { gpio = <&gpio0 27 0>; output; init-low; dir-changeable; };  // LXI_RED
  P8_18 { gpio = <&gpio2  1 0>; output; init-low; dir-changeable; };  // LXI_GREEN

  P8_27 { gpio = <&gpio2 22 0>; input; dir-changeable; };  // ~NETWORK_RESET
  P8_28 { gpio = <&gpio2 24 0>; input; dir-changeable; };  // SPI1_MISO_ISO (~DRDY)


  P8_28 { gpio = <&gpio2 24 0>; input; dir-changeable; };  // SPI1_MISO_ISO (~DRDY)

};

&i2c1 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_pins>;
	clock-frequency = <0x186a0>;
};

&pruss {
  status = "okay";
};

&epwmss0 { 
  status = "okay";
};

&ecap0 {
  status = "okay";
  pinctrl-names = "default";
  pinctrl-0 = <&bb_ecap0_pins>;
};

&epwmss1 {
  status = "okay";
};

&ehrpwm1 {
  status = "okay";
  pinctrl-names = "default";
  pinctrl-0 = <&bb_pwm1_pins>;
};

&epwmss2 {
  status = "okay";
};

&ehrpwm2 {
  status = "okay";
  pinctrl-names = "default";
  pinctrl-0 = <&bb_pwm2_pins>;
};

&spi0 {  // DAC S00803
  status = "okay";
  pinctrl-names = "default";
  pinctrl-0 = <&bb_spi0_pins>;

  spidev@0 {
    compatible = "linux,spidev";
    spi-max-frequency = <10000000>;
    reg = <0>;
    // spi-cpha;
  };
};

&spi1 {  // ADC S00701
  status = "okay";
  pinctrl-names = "default";
  pinctrl-0 = <&bb_spi1_pins>;

  spidev@0 {
    compatible = "linux,spidev";
    spi-max-frequency = <5000000>;
    reg = <0>;
    // spi-cpha;
  };
};

/ {
	model = "TI AM335x Bonecore WiFi Test-Bed";
	compatible = "ti,am335x-bone-green", "ti,am335x-bone-black", "ti,am335x-bone", "ti,am33xx";
};
